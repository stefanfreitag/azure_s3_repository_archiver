{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Allows to backup regularly git repositories hosted in Azure DevOps to an S3 Bucket. In the S3 bucket the backups are placed in a \"directory\" structure like</p> <pre><code>|\n|--- organization 1\n|       |\n|       |--- project 1 \n|       |      |\n|       |      |--- repository 1\n|       |      |\n|       |      |--- repository 2\n|       |      |  ...\n|       |\n|       |--- project 2\n|       |\n|       |--- ... \n|\n|\n|--- organization 2\n| ...\n</code></pre>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>The connection to the Azure DevOps organization requires a personal access token. The PAT needs to have \"Code read\" permission and stored in a SecretsManager secret</p> <pre><code>aws secretsmanager create-secret --name repository_archiver --description \"Secret for the repository archiver\" --secret-string \"{\\\"pat\\\":\\\"&lt;your_pat&gt;\\\"}\"\n</code></pre>"},{"location":"#how-to-use","title":"How to use","text":""},{"location":"#example","title":"Example","text":"<ul> <li>Add the library to your dependencies, e.g to the <code>package.json</code> file</li> </ul> <pre><code>\"dependencies\": {\n  [...],\n  \"azure-devops-repository-archiver\": \"1.4.0\",\n},\n</code></pre> <ul> <li>Per <code>BackupConfiguration</code> a secret containing the Azure DevOps PAT needs to be   specified. It can e.g. be imported</li> </ul> <pre><code>const secret = Secret.fromSecretAttributes(this, 'azure-devops-pat', {\n  secretCompleteArn:\n    'arn:aws:secretsmanager:eu-central-1:&lt;aws_account_id&gt;:secret:&lt;secret_name&gt;',\n});\n</code></pre> <ul> <li>When creating the construct the required <code>BackupConfiguration</code>s can be passed   as below. The grouping is per organization and project.</li> </ul> <pre><code> const backupConfigurations: BackupConfiguration[] = [\n  {\n    organizationName: 'MyOrganization',\n    projectName: 'project-1',\n    repositoryNames: [\n      'repository-1-a',\n      'repository-1-b',\n    ],\n    secretArn: secret.secretArn,\n  },\n  {\n    organizationName: 'MyOrganization',\n    projectName: 'project-2',\n    repositoryNames: [\n      'repository-2-a',\n      'repository-2-b',\n    ],\n    secretArn: secret.secretArn,\n  },\n]\n</code></pre> <ul> <li>The archiver properties and the archiver can then be created as</li> </ul> <pre><code>const archiverProps: ArchiverProperties = {\n  retention: RetentionDays.ONE_WEEK,\n  backupConfigurations: backupConfigurations,\n};\nnew Archiver(this, 'archiver', archiverProps);\n</code></pre>"},{"location":"#restoring-a-repository","title":"Restoring a repository","text":"<ul> <li>Download the archive from S3 to your local machine.</li> <li>Extract the archive.</li> </ul> <pre><code>tar xzf backup.tar\n</code></pre> <ul> <li>Create a new directory and run a <code>git clone</code> operation.</li> </ul> <pre><code>mkdir backup-repo\ncd backup-repo\ngit clone ../backup.git\n</code></pre>"},{"location":"features/","title":"Features","text":"<p>The S3 bucket is configured as below</p> <ul> <li>enabled versioning of objects</li> <li>enabled encryption using an S3 managed Key</li> <li>disallowing public access</li> <li>A lifecycle configuration for the archived repositories. They and their   versions transistion through different storage classes</li> <li>Infrequent Access after 30 days</li> <li>Glacier after 90 days</li> <li>Deep Archive 180 days</li> <li>Expiry after 365 days</li> <li>configurable notifications to SNS about uploaded/ expired objects</li> </ul> <p>The CodeBuild projects are configured as below</p> <ul> <li>Logging to CloudWatch</li> <li>Configurable retention period. Default is one month.</li> <li>Encryption using customer-managed KMS key</li> <li>Schedule based execution.</li> <li>The default schedule is one week and can be overriden as part of the backup     configuration.</li> </ul>"},{"location":"links/","title":"Links","text":"<ul> <li>projen   A new generation of project generators</li> <li>AWS Cloud Development Kit (GitHub repository)   The AWS Cloud Development Kit is a framework for defining cloud infrastructure in code</li> <li>AWS CodeBuild Specification   Build specification reference for CodeBuild</li> </ul>"}]}